
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.19.1
 * Query Engine version: 34ace0eb2704183d2c05b60b52fba5c43c13f303
 */
Prisma.prismaVersion = {
  client: "5.19.1",
  engine: "34ace0eb2704183d2c05b60b52fba5c43c13f303"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`NotFoundError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.OrdersScalarFieldEnum = {
  order_id: 'order_id',
  UserID: 'UserID',
  order_date: 'order_date',
  order_status: 'order_status',
  total_amount: 'total_amount',
  shipping_method: 'shipping_method',
  shipping_price: 'shipping_price',
  full_name: 'full_name',
  shipping_address: 'shipping_address',
  phone_number: 'phone_number',
  discount_id: 'discount_id',
  original_amount: 'original_amount',
  discount_amount: 'discount_amount',
  final_amount: 'final_amount'
};

exports.Prisma.DiscountsScalarFieldEnum = {
  discount_id: 'discount_id',
  discount_code: 'discount_code',
  discount_amount: 'discount_amount',
  status: 'status',
  discount_percent: 'discount_percent',
  expiration_date: 'expiration_date'
};

exports.Prisma.UserdiscountScalarFieldEnum = {
  user_discount_id: 'user_discount_id',
  UserID: 'UserID',
  discount_id: 'discount_id',
  created_at: 'created_at',
  status: 'status'
};

exports.Prisma.OrderdetailScalarFieldEnum = {
  order_id: 'order_id',
  product_id: 'product_id',
  quantity: 'quantity',
  unit_price: 'unit_price'
};

exports.Prisma.PaymentsScalarFieldEnum = {
  payment_id: 'payment_id',
  order_id: 'order_id',
  payment_method: 'payment_method',
  payment_date: 'payment_date',
  amount: 'amount',
  remark: 'remark',
  payment_status: 'payment_status',
  payment_Image: 'payment_Image'
};

exports.Prisma.UsersScalarFieldEnum = {
  UserName: 'UserName',
  UserID: 'UserID',
  Password: 'Password',
  Status: 'Status',
  Role: 'Role',
  resetToken: 'resetToken',
  resetTokenExpiry: 'resetTokenExpiry'
};

exports.Prisma.CategoriesScalarFieldEnum = {
  CategoriesID: 'CategoriesID',
  CategoriesName: 'CategoriesName'
};

exports.Prisma.ProductScalarFieldEnum = {
  product_id: 'product_id',
  name: 'name',
  description: 'description',
  price: 'price',
  CategoryID: 'CategoryID',
  size: 'size',
  Nutritional_value: 'Nutritional_value',
  taste: 'taste',
  image_url: 'image_url'
};

exports.Prisma.Health_infoScalarFieldEnum = {
  health_id: 'health_id',
  UserID: 'UserID',
  first_name: 'first_name',
  last_name: 'last_name',
  gender: 'gender',
  email: 'email',
  address: 'address',
  phone_number: 'phone_number',
  age: 'age',
  weight: 'weight',
  height: 'height',
  profile_image: 'profile_image'
};

exports.Prisma.ReviewsScalarFieldEnum = {
  ReviewID: 'ReviewID',
  product_id: 'product_id',
  UserID: 'UserID',
  Comment: 'Comment',
  Rating: 'Rating',
  CreatedAt: 'CreatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.orders_order_status = exports.$Enums.orders_order_status = {
  processing: 'processing',
  completed: 'completed',
  cancelled: 'cancelled',
  shipping: 'shipping',
  contactadmin: 'contactadmin',
  failed: 'failed'
};

exports.shipping_shipping_status = exports.$Enums.shipping_shipping_status = {
  ems: 'ems',
  standard: 'standard'
};

exports.discount_status = exports.$Enums.discount_status = {
  onProduct: 'onProduct',
  onPrepare: 'onPrepare',
  onProcess: 'onProcess'
};

exports.userdiscount_status = exports.$Enums.userdiscount_status = {
  active: 'active',
  used: 'used',
  expired: 'expired'
};

exports.payments_payment_status = exports.$Enums.payments_payment_status = {
  pending: 'pending',
  cancelled: 'cancelled',
  completed: 'completed'
};

exports.Prisma.ModelName = {
  orders: 'orders',
  discounts: 'discounts',
  userdiscount: 'userdiscount',
  orderdetail: 'orderdetail',
  payments: 'payments',
  users: 'users',
  categories: 'categories',
  Product: 'Product',
  health_info: 'health_info',
  reviews: 'reviews'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
